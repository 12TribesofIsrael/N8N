{
  "name": "Master Long Form",
  "nodes": [
    {
      "parameters": {},
      "type": "n8n-nodes-base.manualTrigger",
      "typeVersion": 1,
      "position": [
        -200,
        20
      ],
      "id": "7fec3e78-81ef-4846-85fc-7b4c1795a7b0",
      "name": "Start Workflow"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "input-content-001",
              "name": "formattedText",
              "value": "How I love the Most High with all my mind, body, and soul. With all my mind, I reflect on the teachings and wisdom of the Most High. In quiet moments of prayer, I seek guidance and understanding. My thoughts are consumed with His love and grace, and I meditate on His word day and night.\n\nWith all my body, I worship and serve the Most High. Through active movement, dance, and physical expressions of praise, I honor Him with my entire being. My body becomes a vessel for His glory, and every action I take is dedicated to serving His purpose.\n\nWith all my soul, I surrender completely to the Most High. My deepest emotions, my innermost being, and my very essence are devoted to Him. In moments of worship, my soul connects with the divine, and I experience a profound sense of peace and fulfillment.\n\nWhen my mind, body, and soul are aligned, I experience a deep and holistic devotion to the Most High. This integration brings balance and harmony to my life. Together with my community, we love the Most High with all our minds, bodies, and souls. Our shared love strengthens our faith and bonds us together.",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        100,
        20
      ],
      "id": "41f75560-a1fd-44d4-a9eb-8294dacf068f",
      "name": "Input Text Content"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.perplexity.ai/chat/completions",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "contentType": "raw",
        "rawContentType": "application/json",
        "body": "={\n  \"model\": \"llama-3.1-sonar-large-128k-online\",\n  \"messages\": [\n    {\n      \"role\": \"user\",\n      \"content\": \"Create 5 video scenes from this text: {{ $('Input Text Content').item.json.formattedText }}. For each scene provide: title, voiceoverText, and imagePrompt. Return as JSON: {\\\"scenes\\\": [{\\\"title\\\": \\\"\\\", \\\"voiceoverText\\\": \\\"\\\", \\\"imagePrompt\\\": \\\"\\\"}]}\"\n    }\n  ],\n  \"max_tokens\": 2000,\n  \"temperature\": 0.7\n}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        400,
        20
      ],
      "id": "31544a9c-f1f5-4e9a-b71d-520279025a71",
      "name": "Perplexity Scene Generator",
      "credentials": {
        "httpHeaderAuth": {
          "id": "PZ1kkz2SyVP9vn5c",
          "name": "Perplexity"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// Parse Perplexity response and format for long form video\nconst response = items[0].json.choices[0].message.content;\n\n// Extract JSON from response\nlet movieData;\ntry {\n  const jsonMatch = response.match(/\\{[\\s\\S]*\\}/);\n  movieData = jsonMatch ? JSON.parse(jsonMatch[0]) : JSON.parse(response);\n} catch (error) {\n  throw new Error('Failed to parse Perplexity response: ' + error.message);\n}\n\n// Handle different response structures - check if scenes are wrapped in \"movie\" or not\nlet scenes;\nif (movieData.movie && movieData.movie.scenes) {\n  scenes = movieData.movie.scenes;\n} else if (movieData.scenes) {\n  scenes = movieData.scenes;\n} else {\n  throw new Error('No scenes found in response. Response structure: ' + JSON.stringify(movieData));\n}\n\n// Transform scenes for long form video\nconst longFormScenes = scenes.map((scene, index) => ({\n  overlaidText: scene.overlaidText || scene.title || `Scene ${index + 1}`,\n  voiceOverText: scene.voiceOverText || scene.voiceoverText || scene.description || '',\n  imagePrompt: scene.imagePrompt || scene.image || `Scene ${index + 1} visual`,\n  sceneIndex: index + 1\n}));\n\nreturn {\n  totalScenes: scenes.length,\n  longFormScenes: longFormScenes,\n  firstScene: scenes[0],\n  lastScene: scenes[scenes.length - 1]\n};"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        700,
        20
      ],
      "id": "cc3fe255-6d0e-4cdc-ab09-99b535ca3754",
      "name": "Format LongForm Scenes"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.json2video.com/v2/movies",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"template\": \"9XtfsD0C3Tb2vbvfc84d\",\n  \"variables\": {\n    \"title\": \"How I Love the Most High With All My Mind Body and Soul\",\n    \"voiceModel\": \"azure\",\n    \"voiceID\": \"en-US-JennyNeural\",\n    \"imageModel\": \"flux-pro\",\n    \"longFormScenes\": \"{{ $('Format LongForm Scenes').item.json.longFormScenes }}\"\n  }\n}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        1000,
        20
      ],
      "id": "8902201d-8115-4d39-94c1-d02e1224b948",
      "name": "Generate LongForm Video",
      "credentials": {
        "httpHeaderAuth": {
          "id": "pKpJaJTXBg3wLGgY",
          "name": "Json2Video"
        }
      }
    },
    {
      "parameters": {
        "url": "https://api.json2video.com/v2/movies",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "project",
              "value": "={{ $('Generate LongForm Video').item.json.project }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        1300,
        20
      ],
      "id": "234e7d4a-b5a1-4591-84b1-23951d68f68d",
      "name": "Check Video Status",
      "credentials": {
        "httpHeaderAuth": {
          "id": "pKpJaJTXBg3wLGgY",
          "name": "Json2Video"
        }
      }
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "id": "video-done-condition",
                    "leftValue": "={{ $json.movie.status }}",
                    "rightValue": "done",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Video Complete"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.movie.status }}",
                    "rightValue": "error",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    },
                    "id": "video-error-condition"
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Video Error"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "id": "video-processing-condition",
                    "leftValue": "={{ $json.movie.status }}",
                    "rightValue": "running",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Still Processing"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3,
      "position": [
        1600,
        20
      ],
      "id": "8cb493ee-a929-40e2-98f9-989e40b255a2",
      "name": "Video Status Router"
    },
    {
      "parameters": {
        "amount": 15
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        1600,
        280
      ],
      "id": "b31099db-0aa7-4adc-a7ff-5c68c1b1dfc9",
      "name": "Wait 15 Seconds",
      "webhookId": "3b835a42-6bb5-4fac-9287-bde4aea0def4"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "final-video-url",
              "name": "videoUrl",
              "value": "={{ $json.movie.url }}",
              "type": "string"
            },
            {
              "id": "final-project-id",
              "name": "projectId",
              "value": "={{ $json.project }}",
              "type": "string"
            },
            {
              "id": "completion-status",
              "name": "status",
              "value": "completed",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        1900,
        20
      ],
      "id": "cd14c982-b3b6-4b44-95c2-3430e70eaba6",
      "name": "Final Video Output"
    }
  ],
  "pinData": {},
  "connections": {
    "Start Workflow": {
      "main": [
        [
          {
            "node": "Input Text Content",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Input Text Content": {
      "main": [
        [
          {
            "node": "Perplexity Scene Generator",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Perplexity Scene Generator": {
      "main": [
        [
          {
            "node": "Format LongForm Scenes",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Format LongForm Scenes": {
      "main": [
        [
          {
            "node": "Generate LongForm Video",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Generate LongForm Video": {
      "main": [
        [
          {
            "node": "Check Video Status",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check Video Status": {
      "main": [
        [
          {
            "node": "Video Status Router",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Video Status Router": {
      "main": [
        [
          {
            "node": "Final Video Output",
            "type": "main",
            "index": 0
          }
        ],
        [],
        [
          {
            "node": "Wait 15 Seconds",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait 15 Seconds": {
      "main": [
        [
          {
            "node": "Check Video Status",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "0cbbf0e5-8664-4a49-b206-a36d0579fc8f",
  "meta": {
    "instanceId": "c71ecfbc6cd667fd069cd84f01f128834a34f2b3a956da891f33f10bd104d2b8"
  },
  "id": "2dDLRsMizEOMs0MR",
  "tags": []
}
{
  "name": "LongForm Master Workflow",
  "nodes": [
    {
      "parameters": {},
      "type": "n8n-nodes-base.manualTrigger",
      "typeVersion": 1,
      "position": [
        -920,
        340
      ],
      "id": "manual-trigger-001",
      "name": "Start Workflow"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "input-content-001",
              "name": "formattedText",
              "value": "How I love the Most High with all my mind, body, and soul. With all my mind, I reflect on the teachings and wisdom of the Most High. In quiet moments of prayer, I seek guidance and understanding. My thoughts are consumed with His love and grace, and I meditate on His word day and night.\n\nWith all my body, I worship and serve the Most High. Through active movement, dance, and physical expressions of praise, I honor Him with my entire being. My body becomes a vessel for His glory, and every action I take is dedicated to serving His purpose.\n\nWith all my soul, I surrender completely to the Most High. My deepest emotions, my innermost being, and my very essence are devoted to Him. In moments of worship, my soul connects with the divine, and I experience a profound sense of peace and fulfillment.\n\nWhen my mind, body, and soul are aligned, I experience a deep and holistic devotion to the Most High. This integration brings balance and harmony to my life. Together with my community, we love the Most High with all our minds, bodies, and souls. Our shared love strengthens our faith and bonds us together.",
              "type": "string"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -620,
        340
      ],
      "id": "input-text-content",
      "name": "Input Text Content"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.perplexity.ai/chat/completions",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"model\": \"llama-3.1-sonar-large-128k-online\",\n  \"messages\": [\n    {\n      \"role\": \"user\",\n      \"content\": \"You are an AI and Automation Tools expert. Create a script for a long-form social media video that narrates the article provided: {{ $('Input Text Content').item.json.formattedText }}. Break the article into scenes for long-form content (8-15 scenes). Each scene should be substantial enough for long-form storytelling with detailed voiceover (40-80 words per scene). Create overlaid text, voiceover text, and image prompts exactly like this format.\\n\\nYour output must be in JSON format following this exact schema:\\n\\n{\\n  \\\"movie\\\": {\\n    \\\"scenes\\\": [\\n      {\\n        \\\"overlaidText\\\": \\\"\\\",\\n        \\\"voiceOverText\\\": \\\"\\\",\\n        \\\"imagePrompt\\\": \\\"\\\"\\n      }\\n    ]\\n  }\\n}\"\n    }\n  ],\n  \"max_tokens\": 8000,\n  \"temperature\": 0.7\n}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -320,
        340
      ],
      "id": "perplexity-scene-generator",
      "name": "Perplexity Scene Generator",
      "credentials": {
        "httpHeaderAuth": {
          "id": "perplexity-connection",
          "name": "Perplexity AI"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// Parse Perplexity response and format for long form video\nconst response = items[0].json.choices[0].message.content;\n\n// Extract JSON from response\nlet movieData;\ntry {\n  const jsonMatch = response.match(/\\{[\\s\\S]*\\}/);\n  movieData = jsonMatch ? JSON.parse(jsonMatch[0]) : JSON.parse(response);\n} catch (error) {\n  throw new Error('Failed to parse Perplexity response: ' + error.message);\n}\n\n// Transform scenes with overlays, voiceover, and images\nconst scenes = movieData.movie.scenes;\nconst longFormScenes = scenes.map((scene, index) => ({\n  overlaidText: scene.overlaidText,\n  voiceOverText: scene.voiceOverText,\n  imagePrompt: scene.imagePrompt,\n  sceneIndex: index + 1\n}));\n\nreturn {\n  totalScenes: scenes.length,\n  longFormScenes: longFormScenes,\n  firstScene: scenes[0],\n  lastScene: scenes[scenes.length - 1]\n};"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -20,
        340
      ],
      "id": "format-longform-scenes",
      "name": "Format LongForm Scenes"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.json2video.com/v2/movies",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"template\": \"9XtfsD0C3Tb2vbvfc84d\",\n  \"variables\": {\n    \"title\": \"How I Love the Most High With All My Mind Body and Soul\",\n    \"voiceModel\": \"azure\",\n    \"voiceID\": \"en-US-JennyNeural\",\n    \"imageModel\": \"flux-pro\",\n    \"longFormScenes\": {{ $('Format LongForm Scenes').item.json.longFormScenes }}\n  }\n}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        280,
        340
      ],
      "id": "generate-longform-video",
      "name": "Generate LongForm Video",
      "credentials": {
        "httpHeaderAuth": {
          "id": "m0mZabbfeoZmw9sU",
          "name": "JSON2Video"
        }
      }
    },
    {
      "parameters": {
        "url": "https://api.json2video.com/v2/movies",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "project",
              "value": "={{ $('Generate LongForm Video').item.json.project }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        580,
        340
      ],
      "id": "check-video-status",
      "name": "Check Video Status",
      "credentials": {
        "httpHeaderAuth": {
          "id": "m0mZabbfeoZmw9sU",
          "name": "JSON2Video"
        }
      }
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "video-done-condition",
                    "leftValue": "={{ $json.movie.status }}",
                    "rightValue": "done",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Video Complete"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.movie.status }}",
                    "rightValue": "error",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    },
                    "id": "video-error-condition"
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Video Error"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "video-processing-condition",
                    "leftValue": "={{ $json.movie.status }}",
                    "rightValue": "running",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Still Processing"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3,
      "position": [
        880,
        340
      ],
      "id": "video-status-router",
      "name": "Video Status Router"
    },
    {
      "parameters": {
        "amount": 15
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        880,
        600
      ],
      "id": "wait-for-processing",
      "name": "Wait 15 Seconds"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "final-video-url",
              "name": "videoUrl",
              "value": "={{ $json.movie.url }}",
              "type": "string"
            },
            {
              "id": "final-project-id",
              "name": "projectId",
              "value": "={{ $json.project }}",
              "type": "string"
            },
            {
              "id": "completion-status",
              "name": "status",
              "value": "completed",
              "type": "string"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        1180,
        340
      ],
      "id": "final-video-output",
      "name": "Final Video Output"
    }
  ],
  "connections": {
    "Start Workflow": {
      "main": [
        [
          {
            "node": "Input Text Content",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Input Text Content": {
      "main": [
        [
          {
            "node": "Perplexity Scene Generator",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Perplexity Scene Generator": {
      "main": [
        [
          {
            "node": "Format LongForm Scenes",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Format LongForm Scenes": {
      "main": [
        [
          {
            "node": "Generate LongForm Video",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Generate LongForm Video": {
      "main": [
        [
          {
            "node": "Check Video Status",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check Video Status": {
      "main": [
        [
          {
            "node": "Video Status Router",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Video Status Router": {
      "main": [
        [
          {
            "node": "Final Video Output",
            "type": "main",
            "index": 0
          }
        ],
        [],
        [
          {
            "node": "Wait 15 Seconds",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait 15 Seconds": {
      "main": [
        [
          {
            "node": "Check Video Status",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "settings": {
    "executionOrder": "v1"
  }
} 